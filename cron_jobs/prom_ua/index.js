const CronJob = require('cron').CronJob;
const path = require('path');
const prom_ua = require(path.join(process.env.DIR, "auxmod", 'prom_ua'));
const bot = require(path.join(process.env.DIR, 'auxmod', 'telegram', 'prom_ua'));

async function job() {

  let subscribers = await prom_ua.get_subscribers_from_db();

  for (subscriber of subscribers) {
    for (platform_name of Object.keys(subscriber.platforms)) {
      if ((platform_name === "prom_ua" || platform_name === "tiu_ru") && subscriber.platforms[platform_name].enable) {
        let orders_from_platform = await prom_ua.get_orders_from_platform(subscriber.platforms[platform_name].url);

        if (orders_from_platform) {//–Ω–µ—Ç –æ—à–∏–±–∫–∏ —Å—á–∏—Ç–∞–≤–∞–Ω–∏—è –ø–æ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π —Å—Å—ã–ª–∫–∏(orders –ø–æ–ª—É—á–µ–Ω—ã)

          let past_orders = subscriber.platforms[platform_name].past_orders.map(el => el.id);//–≤—Å–µ id –ø—Ä–æ—à–ª—ã—Ö (orders) –∑–∞–∫–∞–∑–æ–≤
          //test past_orders.shift();
          let new_orders = orders_from_platform
            .map(order => !past_orders.includes(order.id) && order)
            .filter(i => i);

          if (new_orders.length) {
            subscriber.platforms[platform_name].past_orders.push(...new_orders);

            for (order of new_orders) {
              let { method, url, caption, media, opt } = await prom_ua.prepare_order_to_message_media({
                order: order, platform_name: platform_name.replace('_', '.')
              });
              
              bot[method]({ id: subscriber.id, media: media || url, caption: caption, opt: opt });
              prom_ua.update_subscriber_to_db(subscriber);//–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º
            }
          }
        } else {//–æ—à–∏–±–∫–∞ —Å—Å—ã–ª–∫–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞ get_orders_from_platform –≤–µ—Ä–Ω—É–ª false
          subscriber.platforms[platform_name].enable = false;//–ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ñ–ª–∞–≥ —á—Ç–æ —Å—Å—ã–ª–∫–∞ –Ω–µ –≤–∞–ª–∏–¥–Ω–∞
          prom_ua.update_subscriber_to_db(subscriber);//–ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞ —Å –¥–∞–Ω–Ω—ã–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º

          platform_name = platform_name.replace('_', '.');
          bot.sendMessage(subscriber.id,//–ø—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–ø–∏—Å—á–∏–∫–∞
            `‚ö†Ô∏è –ò–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç –ø–æ—Ä—Ç–∞–ª–∞ <a href='https://my.${platform_name}/cms/order'>${platform_name}</a> –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.` +
            `\nüìé –ü—Ä–∏—á–∏–Ω–∞: "—Å—Å—ã–ª–∫–∞ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞."` +
            `\n‚òëÔ∏è –î–ª—è –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –≤–∞–ª–∏–¥–Ω—É—é —Å—Å—ã–ª–∫—É.`);
        }
      }
    }
  }
}

new CronJob({
  cronTime: '0 */5 * * * *',
  onTick: job,
  start: true,
  timeZone: 'Europe/Moscow',
  context: {}
});

console.log('CronJob "prom_ua" is started!!!');